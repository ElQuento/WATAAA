<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Variables
view_wmin = 640;
view_hmin = 360;
view_wmax = 6400;
view_hmax = 3600;

level = 1;
game_over = false;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>// Goto shop
room_goto(rm_shop);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Control stuff

//Check for cloud
if (instance_exists(obj_cloud)) {

    // Adapt level
    level = floor(obj_cloud.energy / 10);
    
    // Adapt the view to the height
    regulator = floor(obj_cloud.height / 10);
    
    //So Width and Height scroll with the same speed
    scrollspeed = 1.01;
    
    
    
    if (view_wview[0] &lt; view_wmin * regulator &amp;&amp; view_wview[0] &lt; view_wmax) {
        view_wview[0] = view_wview[0] * scrollspeed;
        obj_cloud.image_xscale  = obj_cloud.image_xscale  * scrollspeed;
        if (view_wview[0] &gt; view_wmin * regulator &amp;&amp; view_wview[0] &gt; view_wmin) view_wview[0] = view_wmin * regulator;
    }else if (view_wview[0] &gt; view_wmin * regulator &amp;&amp; view_wview[0] &gt; view_wmin){
        view_wview[0] = view_wview[0] * (2-scrollspeed);
        obj_cloud.image_xscale  = obj_cloud.image_xscale  * (2-scrollspeed);
        if(view_wview[0] &lt; view_wmin * regulator &amp;&amp; view_wview[0] &lt; view_wmax) view_wview[0] = view_wmin * regulator;
    }
    if (view_hview[0] &lt; view_hmin * regulator &amp;&amp; view_hview[0] &lt; view_hmax){
        obj_cloud.image_yscale  = obj_cloud.image_yscale  * scrollspeed;
        view_hview[0] = view_hview[0]*scrollspeed;
        if (view_hview[0] &gt; view_hmin * regulator &amp;&amp; view_hview[0] &gt; view_hmin) view_hview[0] = view_hmin * regulator;
     }else if (view_hview[0] &gt; view_hmin * regulator &amp;&amp; view_hview[0] &gt; view_hmin) {
        obj_cloud.image_yscale  = obj_cloud.image_yscale  * (2-scrollspeed);
        view_hview[0] = view_hview[0]*(2-scrollspeed);
        if (view_hview[0] &lt; view_hmin * regulator &amp;&amp; view_hview[0] &lt; view_hmax) view_hview[0] = view_hmin * regulator;
    }
    show_debug_message("X:"+string(view_wview[0])+" Y:" +string(view_hview[0]));
    
    
    // Game Over if energy is empty (this here should be checked LAST)
    if (obj_cloud.energy &lt;= 0 &amp;&amp; !game_over) {
        game_over = true;
        instance_create(obj_cloud.x + 16, obj_cloud.y + 16, obj_game_over);
        with (obj_cloud) instance_destroy();
        alarm[0] = room_speed * 5;
    }
    
}

/*

if(level &gt; 4){
    level = 4;
}

target_height = view_hmin;
switch (floor(obj_cloud.energy / 10)){
case 1: target_height = view_hmin * 1;
case 2: target_height = view_hmin * 2;
case 3: target_height = view_hmin * 3;
default: target_height = view_hmin;;
}

if(view_hview[0]&lt;target_height){
    view_wview[0] += 10;
    view_hview[0] += 10;
}

*/
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Debug messages

if (instance_exists(obj_cloud) &amp;&amp; instance_exists(obj_view)) {
    draw_text(obj_view.x - 16, obj_view.y - 120, "Energy: " + string(obj_cloud.energy));
    draw_text(obj_view.x - 16, obj_view.y - 100, "Level: " + string(level));
    draw_text(obj_view.x - 16, obj_view.y -80, "Height: " + string(obj_cloud.height));
}
//draw_text(obj_view.x - 16, obj_view.y - 60, "View_w: " + string(view_wview[0]));
//draw_text(obj_view.x - 16, obj_view.y - 40, "View_h: " + string(view_hview[0]));
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
